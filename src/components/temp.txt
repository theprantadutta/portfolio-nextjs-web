<button
        className='special-border group border border-gray-800 text-gray-800 font-semibold mt-5 flex h-[2rem] w-[8rem] items-center justify-center gap-2 dark:text-white outline-none transition-all hover:scale-110 focus:scale-110 active:scale-105 disabled:scale-100 disabled:bg-opacity-65 dark:bg-opacity-10'
        type='button'
        onClick={() => setShowModal(true)}
      >
        Screenshots
      </button>
      <div
        id="default-modal"
        className={`${
          showModal ? 'flex' : 'hidden'
        } fixed z-[9999] left-0 right-0 top-0 h-full w-full items-center justify-center overflow-x-hidden md:inset-0`}
      >
        {/* Backdrop */}
        <div className="fixed inset-0 bg-black opacity-50" onClick={handleClose}></div>
        <div ref={modalRef} className='relative max-h-full w-full max-w-16 md:max-w-2xl p-4'>
          <div className='relative rounded-lg'>
            <div
              id='default-carousel'
              className='relative w-full'
              data-carousel='slide'
            >
              {/* Carousel wrapper */}
              <div className='relative h-[24rem] overflow-hidden rounded-lg md:h-[32rem]'>
                 {/* {slides.map((slide, i) => {
                    return ( */}
                        <div
                  className='duration-700 ease-in-out'
                  data-carousel-item=''
                >
                  <Image
                    height={500}
                    width={500}
                    src={slides[currentSlide]}
                    className='absolute left-1/2 top-1/2 block w-full -translate-x-1/2 -translate-y-1/2'
                    alt='...'
                  />
                </div>
                    {/* )
                 })} */}
              </div>
              {/* Slider indicators */}
              <div className='absolute bottom-5 left-1/2 z-30 flex -translate-x-1/2 space-x-3 rtl:space-x-reverse'>
                {slides.map((slide, i) => {
                    return (
                        <button
                        key={i}
                  type='button'
                  className='h-3 w-3 rounded-full'
                  aria-label={`Slide ${i + 1}`}
                  data-carousel-slide-to={i}
                  onClick={() => setCurrentSlide(i)}
                />
                    )
                })}
              </div>
              {/* Slider controls */}
              <button
                type='button'
                className='group absolute start-0 top-0 z-30 flex h-full cursor-pointer items-center justify-center px-4 focus:outline-none'
                data-carousel-prev=''
                onClick={() => setCurrentSlide(currentSlide == 0 ? slides.length - 1 : currentSlide - 1)}
              >
                <span className='inline-flex h-10 w-10 items-center justify-center rounded-full bg-white/30 group-hover:bg-white/50 group-focus:outline-none group-focus:ring-4 group-focus:ring-white dark:bg-gray-800/30 dark:group-hover:bg-gray-800/60 dark:group-focus:ring-gray-800/70'>
                  <svg
                    className='h-4 w-4 text-white dark:text-gray-800 rtl:rotate-180'
                    aria-hidden='true'
                    xmlns='http://www.w3.org/2000/svg'
                    fill='none'
                    viewBox='0 0 6 10'
                  >
                    <path
                      stroke='currentColor'
                      strokeLinecap='round'
                      strokeLinejoin='round'
                      strokeWidth={2}
                      d='M5 1 1 5l4 4'
                    />
                  </svg>
                  <span className='sr-only'>Previous</span>
                </span>
              </button>
              <button
                type='button'
                className='group absolute end-0 top-0 z-30 flex h-full cursor-pointer items-center justify-center px-4 focus:outline-none'
                data-carousel-next=''
                onClick={() => setCurrentSlide(currentSlide == slides.length - 1 ? 0 : currentSlide + 1)}
                >
                <span className='inline-flex h-10 w-10 items-center justify-center rounded-full bg-white/30 group-hover:bg-white/50 group-focus:outline-none group-focus:ring-4 group-focus:ring-white dark:bg-gray-800/30 dark:group-hover:bg-gray-800/60 dark:group-focus:ring-gray-800/70'>
                  <svg
                    className='h-4 w-4 text-white dark:text-gray-800 rtl:rotate-180'
                    aria-hidden='true'
                    xmlns='http://www.w3.org/2000/svg'
                    fill='none'
                    viewBox='0 0 6 10'
                  >
                    <path
                      stroke='currentColor'
                      strokeLinecap='round'
                      strokeLinejoin='round'
                      strokeWidth={2}
                      d='m1 9 4-4-4-4'
                    />
                  </svg>
                  <span className='sr-only'>Next</span>
                </span>
              </button>
            </div>
          </div>
        </div>
      </div>